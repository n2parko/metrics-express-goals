{
  "name": "google-spreadsheets",
  "version": "0.1.0",
  "main": "./lib",
  "devDependencies": {
    "mocha": "~1.14.0"
  },
  "dependencies": {
    "request": "~2.27.0",
    "googleclientlogin": "~0.2.6",
    "extend": "~1.2.1",
    "xml2json": "~0.3.2",
    "debug": "~0.7.4"
  },
  "readme": "# Google Spreadsheets\n\n  A nicer Google Spreadsheets API for node. Supports batched reads and writes.\n\n## Installation\n\n    $ npm install segmentio/google-spreadsheets\n\n## Examples\n\n### Open Spreadsheet\n\n```js\nvar spreadsheets = require('google-spreadsheets');\n\nspreadsheets()\n  .login('username', 'password')\n  .key('0AvP3ixW_RotVdHdnWDZvUHhnWWhHQy0xZFViN3hUSmc')\n  .open(function (err, spreadsheet) {\n\n  });\n```\n\n```js\nspreadsheets()\n  .login('username', 'password')\n  .name('Segment.io Users')\n  .open(function (err, spreadsheet) {\n    \n  });\n```\n\n\n### Select Worksheet\n\n```js\nvar sheet = spreadsheet.select('id');\n```\n\nor full example:\n\n```js\nspreadsheets()\n  .login('username', 'password')\n  .key('0AvP3ixW_RotVdHdnWDZvUHhnWWhHQy0xZFViN3hUSmc')\n  .open(function (err, spreadsheet) {\n    var worksheets = spreadsheet.worksheets;\n    var worksheet = spreadsheet.select(worksheets[0].id);\n    console.log(worksheet);\n    /*\n    {\n      id: 'od6',\n      name: 'Sheet1',\n      columnCount: 20,\n      rowCount: 20\n    }\n    */\n  });\n```\n\n### Get Cells\n\n```js\nworksheet.query()\n  .cell(1, 1)\n  .cell(1, 2)\n  .get(function (err, cells) {\n    console.log(cells);\n    // [\n    //   {row: 1, column: 1, value: 'something', text: 'something'},\n    //   {row: 1, column: 2, value: '=R[-1]C/12', text: '$18233.33', numeric: 18233.33 }\n    // ]\n});\n```\n\n### Update Rows\n\n```js\nworksheet.update()\n  .cell(1, 3, 'hello')\n  .cell(1, 4, 'hello2')\n  .send(function (err) {\n    \n});\n```\n\n### Query Worksheet Metadata\n\n```js\nworksheet.metadata(function (err, metadata) {\n  console.log(metadata);\n  /*\n  {\n    id: 'od6',\n    name: 'Sheet1',\n    columnCount: 20,\n    rowCount: 20\n  }\n  */\n});\n```\n\n## API\n\n### Spreadsheets\n\n#### .login(username, password)\n\n  Adds a client-login authentication password for the Google Spreadsheets service.\n\n#### .key(key)\n\n  Creates an open query for a spreadsheet with `key`.\n\n#### .name(name)\n\n  Creates an open query for a spreadsheet with `name`.\n\n#### .open(callback)\n\n  Executes the spreadsheet open query.\n\n### Spreadsheet\n\n#### .worksheets\n\n  An array of worksheets accessible on the spreadsheet.\n\n#### .select(id)\n\n  Return a worksheet with `id` within the spreadsheet.\n\n### Worksheet\n\n#### .query()\n\n  Creates a worksheet `CellQuery`.\n\n#### .update()\n\n  Creates a worksheet `UpdateQuery`.\n\n#### .metadata(callback)\n\n  Queries for a worksheet's metadata.\n\n### CellQuery\n\n#### .cell(row, column)\n\n  Adds a cell to lookup within the `CellQuery`.\n\n#### .get(callback)\n\n  Executes the `CellQuery`.\n\n### UpdateQuery\n\n#### .cell(row, column, val)\n\n  Adds a cell to update to the batch update query.\n\n#### .send(callback)\n\n  Sends the cell update batch query.\n\n## License\n\n```\nWWWWWW||WWWWWW\n W W W||W W W\n      ||\n    ( OO )__________\n     /  |           \\\n    /o o|    MIT     \\\n    \\___/||_||__||_|| *\n         || ||  || ||\n        _||_|| _||_||\n       (__|__|(__|__|\n```\n",
  "readmeFilename": "Readme.md",
  "description": "A nicer Google Spreadsheets API for node. Supports batched reads and writes.",
  "_id": "google-spreadsheets@0.1.0",
  "_shasum": "53122a8aea20e32f8efbc41d370e22ecf63d2271",
  "_resolved": "git://github.com/segmentio/google-spreadsheets#11c72b7063f426d5179550511b00ef4a1e769524",
  "_from": "git://github.com/segmentio/google-spreadsheets",
  "_fromGithub": true
}
